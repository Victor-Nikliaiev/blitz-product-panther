1) npm i -g blitz
2) blitz new project_name
3) blitz db migrate
4) blitz start
5) blitz generate all product name:string
6) blitz db migrate 
7) git add . 
8) git commit -m "text"

open index.test.tsx
and comment out 
// jest.mock("app/hooks/useCurrentUser")
// const mockUseCurrentUser = useCurrentUser as 
everything in test.skip

and in the bottom add 

9) expect(true).toBe(true)
10) Change package.json for the test like:  "test": "jest --runTestsByPath app/**/*.test.ts*"
10) Change package.json for the test like:  "test:coverage": "jest --runTestsByPath app/**/*.test.ts* --coverage"

11) blitz install tailwind

                            /// CYPRESS ///
12) yarn add cypress
13) npx cypress init
14) npx cypress open

open cypress.json and put next to there: 
"baseUrl": "http://localhost:3000"

15) Added some files: 
  1. cypress/integration/login.spec.ts

import { createRandomUser } from "../support/helpers"

describe("index page", () => {
  beforeEach(() => {
    cy.visit("/")
  })

  it("goes to the signup page", () => {
    cy.contains("a", /Sign Up/i).click()
    cy.location("pathname").should("equal", "/signup")
  })

  it("goes to the login page", () => {
    cy.contains("a", /Login/i).click()
    cy.location("pathname").should("equal", "/login")
  })

  it("allows the user to signup", () => {
    const user = createRandomUser()

    cy.signup(user)

    cy.location("pathname").should("equal", "/")
    cy.contains("button", /Logout/i)
  })

  // it("allows the user to log in", () => {
  //   const user = createRandomUser()

  //   cy.signup(user)

  //   cy.contains("button", /Logout/i).click()
  //   cy.contains("a", /Login/i).click()

  //   cy.contains("Email").find("input").type(user.email)
  //   cy.contains("Password").find("input").type(user.password)
  //   cy.contains("button", "Log In").click()

  //   cy.location("pathname").should("equal", "/")
  //   cy.contains("button", "Logout")
  // })

  // it("allows the user to logout", () => {
  //   const user = createRandomUser()

  //   cy.signup(user)

  //   cy.contains("button", "Logout").click()

  //   cy.location("pathname").should("equal", "/")
  //   cy.contains("a", "Login")
  // })

  // it("tracks anonymous sessions", () => {
  //   // TODO - why does this fail on windows??
  //   cy.skipOn("windows")
  //   const user = createRandomUser()

  //   cy.contains("button", "Track view").click()
  //   cy.contains("button", "Track view").click()
  //   cy.contains('"views": 2')

  //   cy.signup(user)

  //   cy.contains('"views": 2')
  // })
})

export {}

2. cypress/index.d.ts

  /// <reference types="Cypress" />
/// <reference types="@cypress/skip-test" />

declare namespace Cypress {
  interface Chainable {
    signup(user: { email: string; password: string }): void
  }
}

3. cypress/support/commands.ts

Cypress.Commands.add("signup", ({ email, password }) => {
  cy.contains("a", "Sign Up").click()

  cy.contains("Email").find("input").type(email)
  cy.contains("Password").find("input").type(password)
  cy.contains("button", "Create Account").click()
})

export {}

4. cypress/support/helpers.ts

export const createRandomUser = () => {
  const random = Math.round(Math.random() * 100000).toString()
  const email = `test_${random}@example.com`
  const password = `password_${random}`

  return { email, password }
}